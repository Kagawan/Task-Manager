<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="hexlet.code.controllers.AuthenticationControllerTest" tests="2" skipped="0" failures="0" errors="0" timestamp="2024-08-28T08:19:57" hostname="rashid-Z690-AORUS-ELITE-AX" time="0.511">
  <properties/>
  <testcase name="createTestWithInvalidCredential()" classname="hexlet.code.controllers.AuthenticationControllerTest" time="0.37"/>
  <testcase name="createTest()" classname="hexlet.code.controllers.AuthenticationControllerTest" time="0.14"/>
  <system-out><![CDATA[
  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
?[32m :: Spring Boot :: ?[39m              ?[2m (v3.1.4)?[0;39m

Hibernate: drop table if exists labels cascade 
Hibernate: drop table if exists labels_tasks cascade 
Hibernate: drop table if exists statuses cascade 
Hibernate: drop table if exists statuses_tasks cascade 
Hibernate: drop table if exists tasks cascade 
Hibernate: drop table if exists tasks_labels cascade 
Hibernate: drop table if exists users cascade 
Hibernate: drop table if exists users_tasks cascade 
Hibernate: create table labels (created_at date, id bigint generated by default as identity, name varchar(1000), primary key (id))
Hibernate: create table labels_tasks (label_id bigint not null, tasks_id bigint not null, primary key (label_id, tasks_id))
Hibernate: create table statuses (created_at date, id bigint generated by default as identity, name varchar(255) unique, slug varchar(255) unique, primary key (id))
Hibernate: create table statuses_tasks (task_status_id bigint not null, tasks_id bigint not null unique)
Hibernate: create table tasks (created_at date, index integer, assignee_id bigint, id bigint generated by default as identity, task_status_id bigint not null, description varchar(255), name varchar(255), primary key (id))
Hibernate: create table tasks_labels (labels_id bigint not null, task_id bigint not null, primary key (labels_id, task_id))
Hibernate: create table users (created_at date, updated_at date, id bigint generated by default as identity, email varchar(255) unique, first_name varchar(255), last_name varchar(255), password_digest varchar(255) not null, primary key (id))
Hibernate: create table users_tasks (tasks_id bigint not null unique, user_id bigint not null)
Hibernate: alter table if exists labels_tasks add constraint FKlx3jtdttowhjki86uq93xxxoq foreign key (tasks_id) references tasks
Hibernate: alter table if exists labels_tasks add constraint FKlb308skskhnafjq1rcxlksjqk foreign key (label_id) references labels
Hibernate: alter table if exists statuses_tasks add constraint FKc23fqjlnmbqdlcsen9c958rkd foreign key (tasks_id) references tasks
Hibernate: alter table if exists statuses_tasks add constraint FKar90fjcf4c44uxtxniu7p9c5g foreign key (task_status_id) references statuses
Hibernate: alter table if exists tasks add constraint FKekr1dgiqktpyoip3qmp6lxsit foreign key (assignee_id) references users
Hibernate: alter table if exists tasks add constraint FKdv9k4oaxnrxb91o32qq1tes7s foreign key (task_status_id) references statuses
Hibernate: alter table if exists tasks_labels add constraint FK1jqo1eikgg8xnhi58yp81b8nl foreign key (labels_id) references labels
Hibernate: alter table if exists tasks_labels add constraint FK9qrs86gyw7ctgqiwqvr9jkf0l foreign key (task_id) references tasks
Hibernate: alter table if exists users_tasks add constraint FKphskmyjd10svfk7iwnda2rib0 foreign key (tasks_id) references tasks
Hibernate: alter table if exists users_tasks add constraint FK6frwjo48hefay0rg31q970r8t foreign key (user_id) references users
Hibernate: insert into users (created_at,email,first_name,last_name,password_digest,updated_at,id) values (?,?,?,?,?,?,default)
Hibernate: insert into users (created_at,email,first_name,last_name,password_digest,updated_at,id) values (?,?,?,?,?,?,default)
Hibernate: insert into statuses (created_at,name,slug,id) values (?,?,?,default)
Hibernate: insert into statuses (created_at,name,slug,id) values (?,?,?,default)
Hibernate: insert into statuses (created_at,name,slug,id) values (?,?,?,default)
Hibernate: insert into statuses (created_at,name,slug,id) values (?,?,?,default)
Hibernate: insert into statuses (created_at,name,slug,id) values (?,?,?,default)
Hibernate: insert into labels (created_at,name,id) values (?,?,default)
Hibernate: insert into labels (created_at,name,id) values (?,?,default)
Hibernate: select u1_0.id,u1_0.created_at,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password_digest,u1_0.updated_at from users u1_0 where u1_0.email=?
Hibernate: select t1_0.user_id,t1_1.id,a1_0.id,a1_0.created_at,a1_0.email,a1_0.first_name,a1_0.last_name,a1_0.password_digest,a1_0.updated_at,t1_1.created_at,t1_1.description,t1_1.index,t1_1.name,t1_1.task_status_id,t2_0.id,t2_0.created_at,t2_0.name,t2_0.slug from users_tasks t1_0 join tasks t1_1 on t1_1.id=t1_0.tasks_id left join users a1_0 on a1_0.id=t1_1.assignee_id left join statuses t2_0 on t2_0.id=t1_1.task_status_id where t1_0.user_id=?
Hibernate: select u1_0.id,u1_0.created_at,u1_0.email,u1_0.first_name,u1_0.last_name,u1_0.password_digest,u1_0.updated_at from users u1_0 where u1_0.email=?
Hibernate: select t1_0.user_id,t1_1.id,a1_0.id,a1_0.created_at,a1_0.email,a1_0.first_name,a1_0.last_name,a1_0.password_digest,a1_0.updated_at,t1_1.created_at,t1_1.description,t1_1.index,t1_1.name,t1_1.task_status_id,t2_0.id,t2_0.created_at,t2_0.name,t2_0.slug from users_tasks t1_0 join tasks t1_1 on t1_1.id=t1_0.tasks_id left join users a1_0 on a1_0.id=t1_1.assignee_id left join statuses t2_0 on t2_0.id=t1_1.task_status_id where t1_0.user_id=?
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
